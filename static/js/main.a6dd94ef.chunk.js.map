{"version":3,"sources":["types/Filter.ts","TodosContext.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodosContext","React","createContext","setTodos","filter","All","setFilter","query","setQuery","filteredTodos","selectedTodo","setSelectedTodo","TodosProvider","children","useState","todos","useMemo","filtered","todo","Active","completed","Completed","title","toLowerCase","includes","value","Provider","TodoList","useContext","className","map","id","cn","type","onClick","TodoFilter","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","isSelectedLoading","setIsSelectedLoading","selectedUser","setSelectedUser","useEffect","userId","finally","href","email","name","App","isLoading","setIsLoading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6dd94ef.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { useMemo, useState } from 'react';\nimport { Filter } from './types/Filter';\nimport { Todo } from './types/Todo';\n\ntype TodosGlobalContext = {\n  setTodos: (t: Todo[]) => void,\n  filter: Filter,\n  setFilter: (f: Filter) => void,\n  query: string,\n  setQuery: (q: string) => void,\n  filteredTodos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodosContext = React.createContext<TodosGlobalContext>({\n  setTodos: () => {},\n  filter: Filter.All,\n  setFilter: () => {},\n  query: '',\n  setQuery: () => {},\n  filteredTodos: [],\n  selectedTodo: null,\n  setSelectedTodo: () => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState(Filter.All);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const filteredTodos = useMemo(() => {\n    let filtered = todos.filter(todo => {\n      switch (filter) {\n        case Filter.Active:\n          return !todo.completed;\n\n        case Filter.Completed:\n          return todo.completed;\n\n        default:\n          return true;\n      }\n    });\n\n    if (query) {\n      filtered = filtered.filter(\n        todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n      );\n    }\n\n    return filtered;\n  }, [todos, filter, query]);\n\n  const value = useMemo(() => {\n    return {\n      setTodos,\n      filter,\n      setFilter,\n      query,\n      setQuery,\n      filteredTodos,\n      selectedTodo,\n      setSelectedTodo,\n    };\n  }, [todos, filter, query, selectedTodo]);\n\n  return (\n    <TodosContext.Provider value={value}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { TodosContext } from '../../TodosContext';\n\nexport const TodoList: React.FC = () => {\n  const {\n    filteredTodos,\n    selectedTodo,\n    setSelectedTodo,\n  } = useContext(TodosContext);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('far', {\n                      'fa-eye': selectedTodo?.id !== todo.id,\n                      'fa-eye-slash': selectedTodo?.id === todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useContext } from 'react';\nimport { TodosContext } from '../../TodosContext';\nimport { Filter } from '../../types/Filter';\n\nexport const TodoFilter = () => {\n  const {\n    filter,\n    setFilter,\n    query,\n    setQuery,\n  } = useContext(TodosContext);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(e) => setFilter(e.target.value as Filter)}\n          >\n            <option value={Filter.All}>All</option>\n            <option value={Filter.Active}>Active</option>\n            <option value={Filter.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!!query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { TodosContext } from '../../TodosContext';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const { selectedTodo, setSelectedTodo } = useContext(TodosContext);\n  const [isSelectedLoading, setIsSelectedLoading] = useState(true);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setSelectedUser)\n        .finally(() => setIsSelectedLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isSelectedLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, {\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { TodosContext } from './TodosContext';\n\nexport const App: React.FC = () => {\n  const { setTodos, selectedTodo } = useContext(TodosContext);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodosProvider } from './TodosContext';\n\nReactDOM.render(\n  <TodosProvider>\n    <App />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}